{"ast":null,"code":"var _jsxFileName = \"/Users/wlnlvn2/Desktop/Volkswagen Junior Academy/demos/react-routing/src/App.tsx\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MainContentRouter } from \"./components/navigation/mainContentRouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(MainContentRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n/* import { FC, useState } from \"react\";\nimport { PageLayout } from \"./components/pageLayout/pageLayout\";\nimport { Home } from \"./pages/home\";\nimport { About } from \"./pages/about\";\nimport { Products } from \"./pages/products\";\nimport { Product } from \"./pages/product\";\nimport { ProductData } from \"./types/types\";\n\nexport const App: FC = () => {\n  // State to track the current page and selected product\n  const [currentPage, setCurrentPage] = useState<string>(\"home\");\n  const [selectedProduct, setSelectedProduct] = useState<ProductData | null>(\n    null\n  );\n\n  // Handle navigation between pages\n  const navigateTo = (page: string, product?: ProductData) => {\n    setCurrentPage(page);\n    if (product) {\n      setSelectedProduct(product);\n    }\n  };\n\n  // Render the appropriate component based on the currentPage state\n  const renderPage = () => {\n    switch (currentPage) {\n      case \"about\":\n        return <About />;\n      case \"products\":\n        return <Products navigateTo={navigateTo} />;\n      case \"product\":\n        return <Product product={selectedProduct} navigateTo={navigateTo} />;\n      case \"home\":\n      default:\n        return <Home />;\n    }\n  };\n\n  return <PageLayout navigateTo={navigateTo}>{renderPage()}</PageLayout>;\n}; */\n/**\n *    ------------ Props navigateTo prop tree without React Router Dom -----------\n *     app.tsx\n *            |\n *            |\n *            |\n *            |__ pagelayout.tsx\n *            |                 |\n *            |                 |__ sidebar.tsx\n *            |                                |\n *            |__ products.tsx                 |__ home.tsx \n *            |               |                | \n *            |               |__ product.tsx  |__ about.tsx \n *            |                             |  |\n *            |__product.tsx                |__|__ products.tsx\n *                          |                                  | \n *                          | products.tsx                     |__ product.tsx\n *                                                             \n *                             { ... To Be Continued ...}                 \n *\n */\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","MainContentRouter","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wlnlvn2/Desktop/Volkswagen Junior Academy/demos/react-routing/src/App.tsx"],"sourcesContent":["import { BrowserRouter } from \"react-router-dom\";\nimport { FC } from \"react\";\nimport { MainContentRouter } from \"./components/navigation/mainContentRouter\";\n\nexport const App: FC = () => {\n  return (\n    <BrowserRouter>\n      <MainContentRouter />\n    </BrowserRouter>\n  );\n};\n\n/* import { FC, useState } from \"react\";\nimport { PageLayout } from \"./components/pageLayout/pageLayout\";\nimport { Home } from \"./pages/home\";\nimport { About } from \"./pages/about\";\nimport { Products } from \"./pages/products\";\nimport { Product } from \"./pages/product\";\nimport { ProductData } from \"./types/types\";\n\nexport const App: FC = () => {\n  // State to track the current page and selected product\n  const [currentPage, setCurrentPage] = useState<string>(\"home\");\n  const [selectedProduct, setSelectedProduct] = useState<ProductData | null>(\n    null\n  );\n\n  // Handle navigation between pages\n  const navigateTo = (page: string, product?: ProductData) => {\n    setCurrentPage(page);\n    if (product) {\n      setSelectedProduct(product);\n    }\n  };\n\n  // Render the appropriate component based on the currentPage state\n  const renderPage = () => {\n    switch (currentPage) {\n      case \"about\":\n        return <About />;\n      case \"products\":\n        return <Products navigateTo={navigateTo} />;\n      case \"product\":\n        return <Product product={selectedProduct} navigateTo={navigateTo} />;\n      case \"home\":\n      default:\n        return <Home />;\n    }\n  };\n\n  return <PageLayout navigateTo={navigateTo}>{renderPage()}</PageLayout>;\n}; */\n/**\n *    ------------ Props navigateTo prop tree without React Router Dom -----------\n *     app.tsx\n *            |\n *            |\n *            |\n *            |__ pagelayout.tsx\n *            |                 |\n *            |                 |__ sidebar.tsx\n *            |                                |\n *            |__ products.tsx                 |__ home.tsx \n *            |               |                | \n *            |               |__ product.tsx  |__ about.tsx \n *            |                             |  |\n *            |__product.tsx                |__|__ products.tsx\n *                          |                                  | \n *                          | products.tsx                     |__ product.tsx\n *                                                             \n *                             { ... To Be Continued ...}                 \n *\n */"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,SAASC,iBAAiB,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,GAAO,GAAGA,CAAA,KAAM;EAC3B,oBACED,OAAA,CAACH,aAAa;IAAAK,QAAA,eACZF,OAAA,CAACF,iBAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBAC,EAAA,GAhDaN,GAAO;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}